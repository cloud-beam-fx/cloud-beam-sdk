import{ethers as e}from"ethers";class t{constructor(e){this.rpcUrl=void 0,this.funcClientAddress=void 0,this.funcRegAddress=void 0,this.payMasterAddress=void 0,this.rpcUrl=e.rpcUrl,this.funcClientAddress=e.funcClientAddress||"",this.funcRegAddress=e.funcRegAddress||"",this.payMasterAddress=e.payMasterAddress||""}async provider(){return new e.providers.JsonRpcProvider(this.rpcUrl)}async getFuncClientAddress(){return this.funcClientAddress}async getFuncRegAddress(){return this.funcRegAddress}async getPayMasterAddress(){return this.payMasterAddress}async getFeeData(){try{let e=await this.provider(),t=await e.getFeeData();return{maxFeePerGas:t.maxFeePerGas,maxPriorityFeePerGas:t.maxPriorityFeePerGas,gasLimit:5e6}}catch(e){throw console.log(e.message),new Error(e.message)}}}const n=[{inputs:[{internalType:"address payable",name:"funcRegAddress_",type:"address"},{internalType:"address payable",name:"paymasterAddress_",type:"address"},{internalType:"address",name:"functionsConsumerAddress_",type:"address"},{internalType:"address payable",name:"adminAddress_",type:"address"},{internalType:"uint256",name:"requestFeeRate_",type:"uint256"},{internalType:"uint64",name:"subscriptionId_",type:"uint64"},{internalType:"uint32",name:"gasLimit_",type:"uint32"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"functionId",type:"uint256"},{indexed:!0,internalType:"bytes32",name:"requestId",type:"bytes32"}],name:"FuncRequest",type:"event"},{inputs:[{internalType:"bytes32",name:"requestId",type:"bytes32"},{internalType:"bytes",name:"returnData",type:"bytes"},{internalType:"bool",name:"status",type:"bool"},{internalType:"bytes",name:"err",type:"bytes"}],name:"fuffilRequest",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"functionId",type:"uint256"}],name:"getLatestRequest",outputs:[{components:[{internalType:"bytes32",name:"requestId",type:"bytes32"},{internalType:"uint256",name:"functionId",type:"uint256"},{internalType:"string[]",name:"args",type:"string[]"},{internalType:"bytes",name:"returnData",type:"bytes"},{internalType:"bytes",name:"err",type:"bytes"},{internalType:"bool",name:"status",type:"bool"},{internalType:"uint256",name:"time",type:"uint256"}],internalType:"struct FuncClient.Request",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"functionId",type:"uint256"}],name:"getRequests",outputs:[{components:[{internalType:"bytes32",name:"requestId",type:"bytes32"},{internalType:"uint256",name:"functionId",type:"uint256"},{internalType:"string[]",name:"args",type:"string[]"},{internalType:"bytes",name:"returnData",type:"bytes"},{internalType:"bytes",name:"err",type:"bytes"},{internalType:"bool",name:"status",type:"bool"},{internalType:"uint256",name:"time",type:"uint256"}],internalType:"struct FuncClient.Request[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"functionId",type:"uint256"},{internalType:"bytes32",name:"requestId",type:"bytes32"}],name:"getReturnData",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"functionId",type:"uint256"},{internalType:"string",name:"source",type:"string"},{internalType:"string[]",name:"args",type:"string[]"},{internalType:"bytes",name:"secrets",type:"bytes"}],name:"makeRequest",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"requestIdToFunctionId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"requestList",outputs:[{internalType:"bytes32",name:"requestId",type:"bytes32"},{internalType:"uint256",name:"functionId",type:"uint256"},{internalType:"bytes",name:"returnData",type:"bytes"},{internalType:"bytes",name:"err",type:"bytes"},{internalType:"bool",name:"status",type:"bool"},{internalType:"uint256",name:"time",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes32",name:"",type:"bytes32"}],name:"requestMap",outputs:[{internalType:"bytes32",name:"requestId",type:"bytes32"},{internalType:"uint256",name:"functionId",type:"uint256"},{internalType:"bytes",name:"returnData",type:"bytes"},{internalType:"bytes",name:"err",type:"bytes"},{internalType:"bool",name:"status",type:"bool"},{internalType:"uint256",name:"time",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"requestFeeRate_",type:"uint256"}],name:"updateFeeRate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint32",name:"gasLimit_",type:"uint32"}],name:"updateGasLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint64",name:"subscriptionId_",type:"uint64"}],name:"updateSubscriptionId",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"withdrawEth",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],a=[{inputs:[{internalType:"address",name:"_paymasterAddress",type:"address"},{internalType:"address",name:"admin",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"admin",type:"address"},{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"FunctionRegCancel",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"id",type:"uint256"},{indexed:!0,internalType:"uint256",name:"status",type:"uint256"}],name:"FunctionStateChange",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"admin",type:"address"},{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"NewFunctionRegistered",type:"event"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"adminFunctions",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"cancelRegFunctions",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"functionIds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"functionMap",outputs:[{internalType:"address",name:"admin",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"string",name:"topupToken",type:"string"},{internalType:"uint256",name:"functionId",type:"uint256"},{internalType:"enum FuncReg.Status",name:"status",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"admin",type:"address"}],name:"getAdminFunctions",outputs:[{components:[{internalType:"address",name:"admin",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"string",name:"topupToken",type:"string"},{internalType:"uint256",name:"functionId",type:"uint256"},{internalType:"enum FuncReg.Status",name:"status",type:"uint8"}],internalType:"struct FuncReg.Function[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"getRegisteredFunction",outputs:[{components:[{internalType:"address",name:"admin",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"string",name:"topupToken",type:"string"},{internalType:"uint256",name:"functionId",type:"uint256"},{internalType:"enum FuncReg.Status",name:"status",type:"uint8"}],internalType:"struct FuncReg.Function",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRegisteredFunctions",outputs:[{components:[{internalType:"address",name:"admin",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"string",name:"topupToken",type:"string"},{internalType:"uint256",name:"functionId",type:"uint256"},{internalType:"enum FuncReg.Status",name:"status",type:"uint8"}],internalType:"struct FuncReg.Function[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"admin",type:"address"},{internalType:"address",name:"caller",type:"address"},{internalType:"string",name:"topupToken",type:"string"}],name:"registerFunction",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"toogleFunctionState",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"withdrawEth",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"tokenAddress",type:"address"}],name:"withdrawToken",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],s=[{inputs:[{internalType:"address",name:"linkEthAggrAddress_",type:"address"},{internalType:"address",name:"linkUsdAggrAddress_",type:"address"},{internalType:"address",name:"admin",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bool",name:"success",type:"bool"},{indexed:!0,internalType:"string",name:"token",type:"string"}],name:"AdminWithdrawn",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"admin",type:"address"},{indexed:!0,internalType:"uint256",name:"id",type:"uint256"}],name:"NewFunctionAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"admin",type:"address"},{indexed:!0,internalType:"bool",name:"success",type:"bool"}],name:"TopUp",type:"event"},{inputs:[{internalType:"address",name:"admin",type:"address"},{internalType:"string",name:"topupToken",type:"string"},{internalType:"uint256",name:"functionId",type:"uint256"}],name:"addFunction",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"string",name:"ticker",type:"string"}],name:"addTopUpToken",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"adminAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"string",name:"ticker",type:"string"}],name:"adminWithdraw",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"string",name:"",type:"string"}],name:"balances",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"funcClientAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"functionRegAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"admin",type:"address"},{internalType:"string",name:"topupToken",type:"string"}],name:"getAdminBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"string",name:"topupToken",type:"string"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"getConversion",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"functionId",type:"uint256"}],name:"getFunction",outputs:[{components:[{internalType:"address",name:"admin",type:"address"},{internalType:"uint256",name:"functionId",type:"uint256"},{components:[{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"string",name:"ticker",type:"string"}],internalType:"struct PayMaster.Topup",name:"topupToken",type:"tuple"}],internalType:"struct PayMaster.Function",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"string",name:"ticker",type:"string"}],name:"getTopUpToken",outputs:[{components:[{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"string",name:"ticker",type:"string"}],internalType:"struct PayMaster.Topup",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"linkEthAggrAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"linkUsdAggrAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"admin",type:"address"},{internalType:"string",name:"topupToken",type:"string"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"pay",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"regFunctionsMap",outputs:[{internalType:"address",name:"admin",type:"address"},{internalType:"uint256",name:"functionId",type:"uint256"},{components:[{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"string",name:"ticker",type:"string"}],internalType:"struct PayMaster.Topup",name:"topupToken",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"functionRegAddr",type:"address"},{internalType:"address",name:"funcClient",type:"address"}],name:"setup",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"admin",type:"address"},{internalType:"string",name:"topupToken",type:"string"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"topUp",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"",type:"string"}],name:"topups",outputs:[{internalType:"address",name:"tokenAddress",type:"address"},{internalType:"string",name:"ticker",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"withdrawEth",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"tokenAddress",type:"address"}],name:"withdrawToken",outputs:[],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],i=[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{payable:!0,stateMutability:"payable",type:"fallback"},{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}];class r extends t{async registerFunction(t,n,s){try{var i;const r=await this.getFuncRegAddress(),p=new e.Contract(r,a,t),u=await this.getFeeData(),y=await p.registerFunction(t.getAddress(),n,s,u),o=await y.wait();if(0==o.status)throw new Error("Function registration failed");return(null==(i=o.events)?void 0:i.filter(e=>"NewFunctionRegistered"==e.event)[0]).args.id.toNumber()}catch(e){throw console.log(e.message),new Error(e.message)}}async getRegFunction(t){try{const n=await this.provider(),s=await this.getFuncRegAddress(),i=new e.Contract(s,a,n);return await i.getRegisteredFunction(t)}catch(e){throw console.log(e.message),new Error(e.message)}}async getAdminFunctions(t){try{const n=await this.provider(),s=await this.getFuncRegAddress(),i=new e.Contract(s,a,n);return await i.getAdminFunctions(t)}catch(e){throw console.log(e.message),new Error(e.message)}}async toogleFunctionState(t,n){try{var s;let i;const r=await this.getFuncRegAddress(),p=new e.Contract(r,a,t),u=await this.getFeeData(),y=await p.toogleFunctionState(n,u),o=await y.wait();if(0==o.status)throw new Error("Function status toogle failed");const d=null==(s=o.events)?void 0:s.filter(e=>"FunctionStateChange"==e.event)[0];return console.log(d.args.status),0==d.args.status?i="active":1==d.args.status&&(i="paused"),i}catch(e){throw console.log(e.message),new Error(e.message)}}async topup(t,n,a){try{var i;const r=await this.getFeeData(),p=await this.getPayMasterAddress();if("ETH"===a){let a=e.utils.formatEther(await t.getBalance());if(parseInt(a)<n)throw new Error("Insufficient ETH balance");{const a={to:await this.getPayMasterAddress(),value:e.utils.parseEther(n.toString()),from:t.getAddress(),maxFeePerGas:r.maxFeePerGas,maxPriorityFeePerGas:r.maxPriorityFeePerGas,gasLimit:r.gasLimit},s=await t.sendTransaction(a);if(0==(await s.wait()).status)throw new Error("Topup failed");return!0}}const u=new e.Contract(p,s,t),y=await u.topup(t.getAddress(),a,n,r),o=await y.wait();if(0==o.status)throw new Error("Topup failed");const d=null==(i=o.events)?void 0:i.filter(e=>"TopUp"==e.event)[0];return console.log(d.args.success),d.args.success}catch(e){throw console.log(e.message),new Error(e.message)}}async adminWithdraw(t,n){try{var a;const i=await this.getFeeData(),r=await this.getPayMasterAddress(),p=new e.Contract(r,s,t),u=await p.adminWithdraw(n,i),y=await u.wait();if(0==y.status)throw new Error("Withdraw failed");const o=null==(a=y.events)?void 0:a.filter(e=>"AdminWithdrawn"==e.event)[0];return console.log(o.args.success),o.args.success}catch(e){throw console.log(e.message),new Error(e.message)}}async getAdminBalance(t,n){try{const a=await this.provider(),i=await this.getPayMasterAddress(),r=new e.Contract(i,s,a);return"ETH"===n?parseInt(e.utils.formatEther(await r.getAdminBalance(t,n))):parseInt(e.utils.formatUnits(await r.getAdminBalance(t,n),10))}catch(e){throw console.log(e.message),new Error(e.message)}}async makeRequest(t,a,s,i,r){try{var p;const u=await this.getFeeData(),y=await this.getFuncClientAddress(),o=new e.Contract(y,n,t),d=await o.makeRequest(a,i,s,r,u),l=await d.wait();if(0==l.status)throw new Error("Request failed");const m=null==(p=l.events)?void 0:p.filter(e=>"FuncRequest"==e.event)[0];return console.log(m.args.success),{functionId:m.args.functionId,requestId:m.args.requestId}}catch(e){throw console.log(e.message),new Error(e.message)}}async stopFunction(t,a){try{var s;const i=await this.getFeeData(),r=await this.getFuncClientAddress(),p=new e.Contract(r,n,t),u=await p.stopFunction(a,i),y=await u.wait();if(0==y.status)throw new Error("Function stop failed");const o=null==(s=y.events)?void 0:s.filter(e=>"FunctionStopped"==e.event)[0];return console.log(o.args.success),o.args.success}catch(e){throw console.log(e.message),new Error(e.message)}}async getLatestRequest(t){try{const a=await this.provider(),s=await this.getFuncClientAddress(),i=new e.Contract(s,n,a);return await i.getLatestRequest(t)}catch(e){throw console.log(e.message),new Error(e.message)}}async getAllRequest(t){try{const a=await this.provider(),s=await this.getFuncClientAddress(),i=new e.Contract(s,n,a);return await i.getRequests(t)}catch(e){throw console.log(e.message),new Error(e.message)}}approveSpend(t,n,a){var r=this;return new Promise(async function(p,u){try{const p=await r.getFeeData(),u=await r.getPayMasterAddress(),y=new e.Contract(u,s,t),o=await y.getTopUpToken(a),d=new e.Contract(o.tokenAddress,i,t),l=e.utils.formatUnits(await d.balanceOf(t.getAddress()),10);if(parseInt(l)<n)throw new Error("Insufficient balance");const m=await d.approve(u,n,p);if(0==(await m.wait()).status)throw new Error("Approve spend failed");return!0}catch(e){console.log(e.message),u(e.message)}})}}class p extends r{}var u;u=p,[r].forEach(e=>{Object.getOwnPropertyNames(e.prototype).forEach(t=>{Object.defineProperty(u.prototype,t,Object.getOwnPropertyDescriptor(e.prototype,t)||Object.create(null))})});export{p as default};
//# sourceMappingURL=index.modern.mjs.map
